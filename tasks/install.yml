---



# If Nginx or php5-fpm  running stop them
- name: Nginx Install | Shut down nginx if it is running
  shell: "pkill nginx || echo ''"
  when: old_user_checksum.stdout != new_user_checksum.stdout

- name: Nginx Install | Shut down php-fpm if it is running
  shell: "pkill php || echo ''"
  when: old_user_checksum.stdout != new_user_checksum.stdout


# Nginx User/Group
- name: Nginx Install | Make sure the nginx group is present
  group:
    gid: "{{nginx_gid}}"
    name: "{{nginx_group}}"
    state: present
  when: old_user_checksum.stdout != new_user_checksum.stdout

- name: Nginx Install | Make sure the www directory is present
  file:
    path: "{{nginx_www_dir}}"
    state: directory
  when: old_user_checksum.stdout != new_user_checksum.stdout

- name: Nginx Install | Make sure the nginx user is present
  user:
    name: "{{nginx_user}}"
    uid: "{{nginx_uid}}"
    group: "{{nginx_group}}"
    comment: "Nginx user"
    home: "{{nginx_www_dir}}"
    shell: /bin/false
    state: present
    system: yes
  when: old_user_checksum.stdout != new_user_checksum.stdout

- name: Nginx Install | Set the right directory permissions for the www directory
  file:
    path: "{{nginx_www_dir}}"
    owner: "{{nginx_user}}"
    group: "{{nginx_group}}"
    mode: 0755
    state: directory
  when: old_user_checksum.stdout != new_user_checksum.stdout

- name: Nginx Install | Set the right expiration on the nginx user
  shell: "chage -I -1 -E -1 -m -1 -M -1 -W -1 -E -1 {{nginx_user}} && grep {{nginx_user}} /etc/shadow"
  when: old_user_checksum.stdout != new_user_checksum.stdout


# Nginx directories

- name: Nginx Install | Make sure the nginx directory exists
  file:
    path: "{{nginx_dir}}"
    owner: root
    group: root
    mode: 0755
    state: directory

- name: Nginx Install | Make sure the nginx log directory exists
  file:
    path: "{{nginx_log_dir}}"
    owner: root
    group: root
    mode: 0755
    state: directory

- name: Nginx Install | Make sure the sites-available, sites-enabled and conf.d directories exist
  file:
    path: "{{nginx_dir}}/{{item}}"
    owner: root
    group: root
    mode: 0755
    state: directory
  with_items: ["sites-available", "sites-enabled", "conf.d"]


# Build Dependencies

- name: Nginx Install | Make sure the Nginx build dependencies are installed
  apt:
    update_cache: yes
    pkg: "{{item}}"
    state: present
  with_items:
    - perl
    - build-essential
    - git
    - mercurial
    - libperl-dev
    - libcurl4-openssl-dev
    - libpcre3
    - libpcre3-dev
    - libssl-dev

- name: Nginx Install | Clone the Nginx repo
  hg:
    repo:     "{{nginx_repo}}"
    dest:     "/tmp/nginx-repo"
    revision: "{{nginx_revision}}"
    purge:    "yes"

- name: Nginx Install | test for presence of configure script
  shell: >
    if [ ! -e  '/tmp/nginx-repo/configure' ] && [ -e '/tmp/nginx-repo/auto/configure' ] ; then
      cp '/tmp/nginx-repo/auto/configure' '/tmp/nginx-repo/configure' ; 
    fi


- include: "modules_install.yml"

- name: Nginx Install | Set Server Name
  shell: >
    cd /tmp/nginx-repo && 
    perl -pi -e "s/\"Server:.*CRLF/\"Server: {{nginx_server_string}}\" CRLF/g"             "src/http/ngx_http_header_filter_module.c" &&
    perl -pi -e "s/\"Server:[\t ]+nginx\"/\"Server: {{nginx_server_string}}\"/g"           "src/http/ngx_http_header_filter_module.c" &&
    perl -pi -e "s/\<hr\>\<center\>.*<\/center\>/<hr><center>Server Response<\/center>/g"  "src/http/ngx_http_special_response.c"
  when: nginx_server_string != ""


- name: Nginx Install | Compile the Nginx source
  shell: >
    cd /tmp/nginx-repo &&
    ./configure {{nginx_configure_flags}} &&
    make 


- name: Nginx Install | Shut down nginx if it is running
  shell: "pkill nginx || echo ''"


- name: Nginx Install | Install the Nginx source
  shell: >
    cd /tmp/nginx-repo && make install
  notify: restart nginx


- name: Nginx Install | Remove default html directory created by install
  file:
    path: "{{nginx_www_dir}}/html"
    state: absent

